{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Test.js\";\nimport Web3 from 'web3';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar web3 = new Web3();\n\nconst init = () => {\n  if (typeof web3 !== 'undefined') {\n    console.log('Web3 found');\n    window.web3 = new Web3(web3.currentProvider);\n    web3.eth.defaultAccount = web3.eth.accounts[0];\n  } else {\n    console.error('web3 was undefined');\n  }\n};\n\nconst abi = [[{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"changeOwner\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"oldOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnerSet\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getOwner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}]];\n\nconst Test = () => {\n  // contractAddress\n  const getBlock = () => {\n    init();\n    web3 = new Web3(web3.currentProvider); // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n\n    const contractAddress = '0x5A8391EAc93D5a9e4975fE3baAD5306e6DABd2E4';\n    var contract = new web3.eth.Contract(abi, contractAddress);\n    console.log(contract);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getBlock(),\n      children: \"??\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Test.js"],"names":["Web3","React","web3","init","console","log","window","currentProvider","eth","defaultAccount","accounts","error","abi","Test","getBlock","contractAddress","contract","Contract"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,IAAI,GAAG,IAAIF,IAAJ,EAAX;;AAEA,MAAMG,IAAI,GAAG,MAAM;AACjB,MAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;AAC/BE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,IAAAA,MAAM,CAACJ,IAAP,GAAc,IAAIF,IAAJ,CAASE,IAAI,CAACK,eAAd,CAAd;AACAL,IAAAA,IAAI,CAACM,GAAL,CAASC,cAAT,GAA0BP,IAAI,CAACM,GAAL,CAASE,QAAT,CAAkB,CAAlB,CAA1B;AACD,GAJD,MAIO;AACJN,IAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd;AACF;AACF,CARD;;AAUA,MAAMC,GAAG,GAAG,CACR,CACI;AACI,YAAU,CACN;AACI,oBAAgB,SADpB;AAEI,YAAQ,UAFZ;AAGI,YAAQ;AAHZ,GADM,CADd;AAQI,UAAQ,aARZ;AASI,aAAW,EATf;AAUI,qBAAmB,YAVvB;AAWI,UAAQ;AAXZ,CADJ,EAcI;AACI,YAAU,EADd;AAEI,qBAAmB,YAFvB;AAGI,UAAQ;AAHZ,CAdJ,EAmBI;AACI,eAAa,KADjB;AAEI,YAAU,CACN;AACI,eAAW,IADf;AAEI,oBAAgB,SAFpB;AAGI,YAAQ,UAHZ;AAII,YAAQ;AAJZ,GADM,EAON;AACI,eAAW,IADf;AAEI,oBAAgB,SAFpB;AAGI,YAAQ,UAHZ;AAII,YAAQ;AAJZ,GAPM,CAFd;AAgBI,UAAQ,UAhBZ;AAiBI,UAAQ;AAjBZ,CAnBJ,EAsCI;AACI,YAAU,EADd;AAEI,UAAQ,UAFZ;AAGI,aAAW,CACP;AACI,oBAAgB,SADpB;AAEI,YAAQ,EAFZ;AAGI,YAAQ;AAHZ,GADO,CAHf;AAUI,qBAAmB,MAVvB;AAWI,UAAQ;AAXZ,CAtCJ,CADQ,CAAZ;;AAuDA,MAAMC,IAAI,GAAG,MAAM;AAGf;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBX,IAAAA,IAAI;AACJD,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACK,eAAd,CAAP,CAFmB,CAGnB;;AACA,UAAMQ,eAAe,GAAG,4CAAxB;AACA,QAAIC,QAAQ,GAAG,IAAId,IAAI,CAACM,GAAL,CAASS,QAAb,CAAsBL,GAAtB,EAA2BG,eAA3B,CAAf;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACH,GAPD;;AAQA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;KAAMD,I;AAmBN,eAAeA,IAAf","sourcesContent":["import Web3 from 'web3'\nimport React from 'react'\n\nvar web3 = new Web3();\n\nconst init = () => {\n  if (typeof web3 !== 'undefined') {\n    console.log('Web3 found');\n    window.web3 = new Web3(web3.currentProvider);\n    web3.eth.defaultAccount = web3.eth.accounts[0];\n  } else {\n     console.error('web3 was undefined');\n  }\n}\n\nconst abi = [\n    [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"changeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"OwnerSet\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n]\n\nconst Test = () => {\n\n    \n    // contractAddress\n    const getBlock = () => {\n        init();\n        web3 = new Web3(web3.currentProvider);\n        // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n        const contractAddress = '0x5A8391EAc93D5a9e4975fE3baAD5306e6DABd2E4'\n        var contract = new web3.eth.Contract(abi, contractAddress)\n        console.log(contract)\n    }\n    return (\n        <div>\n            <button onClick={() => getBlock()}>??</button>\n        </div>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}