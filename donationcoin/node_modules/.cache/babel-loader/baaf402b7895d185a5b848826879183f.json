{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport { useHistory, Link, useLocation, useParams } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Donatorinterface = () => {\n  _s();\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n  const currentAccount = useLocation().pathname.split('/donator/')[1];\n  const [balance, setBalance] = useState(0);\n  const [donateamount, setDonateamount] = useState(0);\n  const [increase_self_amount, setIncrease] = useState(0);\n  const [tocharity, setTocharity] = useState(\"\");\n  var web3 = new Web3();\n  var contract;\n  web3 = new Web3('HTTP://127.0.0.1:8545');\n  web3.eth.getBalance(currentAccount).then(function (wei) {\n    setBalance(web3.utils.fromWei(wei, 'ether'));\n  });\n  contract = new web3.eth.Contract(abi, currentAccount); //create select items\n\n  function createSelectItems() {\n    var items = []; // you need to implement a function in smart contract which can return all charity address, \n    // and assign to addresses\n\n    var addresses = [1, 2, 3, 4, 5, 6, 7];\n    items.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      children: \"Clck to select charity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this));\n\n    for (let i = 1; i <= addresses.length; i++) {\n      items.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: addresses[i - 1],\n        children: \"Charity \" + addresses[i - 1]\n      }, addresses[i - 1], false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this));\n    }\n\n    return items;\n  } //on drop down select\n\n\n  function onDropdownSelected(e) {\n    console.log(\"The Charity\", e.target.value); // e.target.value is selcted charity address\n\n    setTocharity(e.target.value);\n  } // donate money to charity\n\n\n  const donateMoney = async () => {\n    // the method to donate money to charity\n    // currentAccount, tocharity are from and to addresses\n    web3.eth.getAccounts(function (error, result) {\n      web3.eth.sendTransaction({\n        from: currentAccount,\n        to: \"0x\",\n        value: 1,\n        data: 1\n      }, function (err, transactionHash) {\n        if (!err) console.log(transactionHash + \" success\");\n      });\n    });\n    alert(`You've donated ${donateamount} to charity ${tocharity}`);\n  }; // increase  money in self-account\n\n\n  const increaseself = async () => {\n    contract.methods.inrease(increase_self_amount).send({\n      from: currentAccount\n    }).then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/donator\",\n      style: {\n        position: 'absolute',\n        marginLeft: \"80vw\",\n        marginTop: \"5vh\",\n        color: \"red\"\n      },\n      children: \"Click here to go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"currentAccount:\", currentAccount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => onDropdownSelected(e),\n        children: createSelectItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"label\",\n      value: donateamount,\n      placeholder: \"0\",\n      onChange: event => setDonateamount(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"smallbutton\",\n      onClick: () => donateMoney(),\n      children: \"donate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"label\",\n      value: increase_self_amount,\n      placeholder: \"0\",\n      onChange: event => setIncrease(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"smallbutton\",\n      onClick: () => donateMoney(),\n      children: \"Increase self account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Donatorinterface, \"o01msa5kIjD9KDZm57jwThpfIdo=\", false, function () {\n  return [useLocation];\n});\n\n_c = Donatorinterface;\nexport default Donatorinterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Donatorinterface\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js"],"names":["useState","useEffect","unstable_concurrentAct","useHistory","Link","useLocation","useParams","Web3","Donatorinterface","admins","require","abi","currentAccount","pathname","split","balance","setBalance","donateamount","setDonateamount","increase_self_amount","setIncrease","tocharity","setTocharity","web3","contract","eth","getBalance","then","wei","utils","fromWei","Contract","createSelectItems","items","addresses","push","i","length","onDropdownSelected","e","console","log","target","value","donateMoney","getAccounts","error","result","sendTransaction","from","to","data","err","transactionHash","alert","increaseself","methods","inrease","send","position","marginLeft","marginTop","color","event"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport {useHistory, Link, useLocation, useParams} from 'react-router-dom'\nimport Web3 from 'web3'\n\nconst Donatorinterface = () => {\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi;\n    const currentAccount = useLocation().pathname.split('/donator/')[1];\n    const [balance, setBalance] = useState(0);\n    const [donateamount, setDonateamount] = useState(0);\n    const [increase_self_amount, setIncrease] = useState(0);\n    const [tocharity, setTocharity] = useState(\"\");\n    var web3 = new Web3();\n    var contract;\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n    \n    web3.eth.getBalance(currentAccount).then(\n        function(wei){\n            setBalance(web3.utils.fromWei(wei, 'ether'));\n            \n        }\n    )\n    contract = new web3.eth.Contract(abi, currentAccount)\n\n    //create select items\n    function createSelectItems() {\n        var items = [];\n        // you need to implement a function in smart contract which can return all charity address, \n        // and assign to addresses\n        var addresses = [1,2,3,4,5,6,7];\n\n        items.push(<option value=\"\" disabled selected>Clck to select charity</option> )\n        for (let i = 1; i <= addresses.length; i++) {             \n             items.push(<option key={addresses[i - 1]} value={addresses[i - 1]}>{\"Charity \" + addresses[i - 1]}</option>);   \n             \n        }\n        return items;\n    }  \n    //on drop down select\n    function onDropdownSelected(e) {\n        console.log(\"The Charity\", e.target.value);\n       // e.target.value is selcted charity address\n        setTocharity(e.target.value)\n\n   }\n\n   // donate money to charity\n    const donateMoney = async () => {\n        \n        // the method to donate money to charity\n        // currentAccount, tocharity are from and to addresses\n        web3.eth.getAccounts(function(error, result) {\n            web3.eth.sendTransaction(\n                {from: currentAccount,\n                to: \"0x\",\n                value:  1, \n                data: 1\n                    }, function(err, transactionHash) {\n              if (!err)\n                console.log(transactionHash + \" success\"); \n            });\n        });\n        alert(`You've donated ${donateamount} to charity ${tocharity}`)\n   }\n\n   // increase  money in self-account\n   const increaseself = async () => {\n       contract.methods.inrease(increase_self_amount).send({from: currentAccount}).then(\n           // function here\n       )\n        \n\n   }\n    \n\n\n\n    return (\n        <div>\n            <Link to=\"/donator\" style={{position:'absolute', marginLeft:\"80vw\", marginTop:\"5vh\", color:\"red\"}}>Click here to go back</Link>\n            <span>currentAccount:{currentAccount}</span>\n            \n            <p>balance: {balance}</p>\n            <div className=\"option\">\n                <select onChange={(e) => onDropdownSelected(e)}>\n                    {createSelectItems()}\n                </select>\n            </div>\n            <input type=\"text\" className=\"label\" value={donateamount}  placeholder=\"0\" onChange={(event) => setDonateamount(event.target.value)}/>\n            <button className=\"smallbutton\" onClick={() => donateMoney()}>donate</button>\n            <input type=\"text\" className=\"label\" value={increase_self_amount}  placeholder=\"0\" onChange={(event) => setIncrease(event.target.value)}/>\n            <button className=\"smallbutton\" onClick={() => donateMoney()}>Increase self account</button>\n            \n        </div>\n    )\n}\n\nexport default Donatorinterface\n"]},"metadata":{},"sourceType":"module"}