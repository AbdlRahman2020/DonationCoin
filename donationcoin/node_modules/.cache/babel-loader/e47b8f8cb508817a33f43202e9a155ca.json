{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/DonatorLogin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonatorLogin = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  var success = false;\n  const history = useHistory();\n  var web3 = new Web3();\n  web3 = new Web3('HTTP://127.0.0.1:8545');\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n\n  const submitInput = async e => {\n    var currentAccount;\n    var contract = new web3.eth.Contract(abi, currentAccount);\n    e.preventDefault();\n\n    if (username && password) {\n      console.log(username);\n      console.log(password);\n      await web3.eth.getAccounts().then(function (accounts) {\n        // need a function in contract to map existing address to [password, value] pair\n        // they used the pair to login\n        contract.methods.xxx(each_address).call().then(accounts.some(account => {\n          if (account === username) {\n            currentAccount = account;\n            success = true;\n            return true;\n          }\n\n          console.log(account);\n        }));\n      });\n      console.log(success === true);\n\n      if (success === true) {\n        //log in sucessfully\n        history.push({\n          pathname: '/donator/' + currentAccount,\n          state: {\n            address: currentAccount\n          }\n        });\n      } else {\n        alert(\"username doesn't exist\");\n      }\n    } else {\n      alert(\"please use valid username and password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/donator\",\n      style: {\n        position: 'absolute',\n        marginLeft: \"80vw\",\n        marginTop: \"5vh\",\n        color: \"red\"\n      },\n      children: \"Click here to go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"labelinput\",\n      onSubmit: submitInput,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#92eb49\",\n          textAlign: \"center\",\n          minHeight: \"20vh\",\n          marginTop: \"10vh\"\n        },\n        children: \"User  login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"label\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"label\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enter\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DonatorLogin, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n\n_c = DonatorLogin;\nexport default DonatorLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonatorLogin\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/DonatorLogin.js"],"names":["useState","useHistory","Link","Web3","DonatorLogin","username","setUsername","password","setPassword","success","history","web3","admins","require","abi","submitInput","e","currentAccount","contract","eth","Contract","preventDefault","console","log","getAccounts","then","accounts","methods","xxx","each_address","call","some","account","push","pathname","state","address","alert","position","marginLeft","marginTop","color","textAlign","minHeight","event","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport {useHistory, Link} from 'react-router-dom'\nimport Web3 from 'web3'\nconst DonatorLogin = () => {\n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    var success = false;\n    const history = useHistory()\n    var web3 = new Web3();\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi;\n    \n   \n    const submitInput = async (e) => {\n        var currentAccount;\n        var contract = new web3.eth.Contract(abi, currentAccount)\n        \n        e.preventDefault()\n        if (username && password) {\n            \n            console.log(username);\n            console.log(password);\n            await web3.eth.getAccounts().then(function(accounts){\n            // need a function in contract to map existing address to [password, value] pair\n            // they used the pair to login\n               contract.methods.xxx(each_address).call().then(\n                   accounts.some( account =>{\n                    if (account === username){\n                        currentAccount = account;\n                        success = true;\n                        return true;\n                    } \n                    console.log(account)\n                })\n               )\n\n                \n            })\n\n            console.log(success === true);\n            if (success === true){\n                //log in sucessfully\n                history.push({pathname: '/donator/' + currentAccount, state: {\n                    address: currentAccount }})\n                \n            }\n            else{\n                alert(\"username doesn't exist\")\n            }\n            \n        } \n        else{\n\n            alert(\"please use valid username and password\")\n            \n        }\n        \n        \n    }\n    return (\n        <div >\n                    <Link to=\"/donator\" style={{position:'absolute', marginLeft:\"80vw\", marginTop:\"5vh\", color:\"red\"}}>Click here to go back</Link>\n                    <form action=\"\" className=\"labelinput\" onSubmit={submitInput}>\n                    <h1 style={{color:\"#92eb49\", textAlign:\"center\", minHeight:\"20vh\", marginTop:\"10vh\"}}>User  login</h1>\n                    {/* <label htmlFor=\"\" className=\"label\">\n                        Username:\n                    </label> */}\n                        <input type=\"text\" className=\"label\" value={username}  placeholder=\"Username\" onChange={(event) => setUsername(event.target.value)}/>\n                        {/* <label htmlFor=\"\" className=\"label\">Password:</label> */}   \n                        <input type=\"text\" className=\"label\" value={password} placeholder=\"Password\" onChange={(event) => setPassword(event.target.value)}/>\n                        <input type=\"submit\"  value=\"Enter\" className=\"submit\" />\n                        \n                    </form>\n                    \n                    \n        </div>\n    )\n}\n\nexport default DonatorLogin\n"]},"metadata":{},"sourceType":"module"}