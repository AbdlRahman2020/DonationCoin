{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useHistory, Link, useLocation, useParams } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Donatorinterface = () => {\n  _s();\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n  const currentAccount = useLocation().pathname.split('/donator/')[1];\n  const [balance, setBalance] = useState(0);\n  const [donateamount, setDonateamount] = useState(0);\n  var web3 = new Web3();\n  web3 = new Web3('HTTP://127.0.0.1:8545');\n  web3.eth.getBalance(currentAccount).then(function (wei) {\n    setBalance(web3.utils.fromWei(wei, 'ether')); // alert(balance + \" ETH\");\n\n    console.log(balance);\n  }); // console.log(wei)\n\n  function createSelectItems() {\n    let items = [];\n\n    for (let i = 0; i <= 10; i++) {\n      items.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)); //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n    }\n\n    return items;\n  }\n\n  function onDropdownSelected(e) {\n    console.log(\"THE VAL\", e.target.value); //here you will see the current selected value of the select input\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentAccount, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => onDropdownSelected(),\n        children: createSelectItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"label\",\n      id: \"amount\",\n      placeholder: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"smallbutton\",\n      children: \"donate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Donatorinterface, \"pQ6wqS0vp2FSLFcckNV4vrrDsoY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Donatorinterface;\nexport default Donatorinterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Donatorinterface\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js"],"names":["useState","useEffect","useHistory","Link","useLocation","useParams","Web3","Donatorinterface","admins","require","abi","currentAccount","pathname","split","balance","setBalance","donateamount","setDonateamount","web3","eth","getBalance","then","wei","utils","fromWei","console","log","createSelectItems","items","i","push","onDropdownSelected","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,MAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,QAAMC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAtB;AACA,QAAMC,cAAc,GAAGP,WAAW,GAAGQ,QAAd,CAAuBC,KAAvB,CAA6B,WAA7B,EAA0C,CAA1C,CAAvB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIkB,IAAI,GAAG,IAAIZ,IAAJ,EAAX;AACAY,EAAAA,IAAI,GAAG,IAAIZ,IAAJ,CAAS,uBAAT,CAAP;AAGAY,EAAAA,IAAI,CAACC,GAAL,CAASC,UAAT,CAAoBT,cAApB,EAAoCU,IAApC,CACI,UAASC,GAAT,EAAa;AACTP,IAAAA,UAAU,CAACG,IAAI,CAACK,KAAL,CAAWC,OAAX,CAAmBF,GAAnB,EAAwB,OAAxB,CAAD,CAAV,CADS,CAET;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACH,GALL,EAV2B,CAiB3B;;AACA,WAASa,iBAAT,GAA6B;AACzB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AACzBD,MAAAA,KAAK,CAACE,IAAN,eAAW;AAAgB,QAAA,KAAK,EAAED,CAAvB;AAAA,kBAA2BA;AAA3B,SAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,cAAX,EADyB,CAEzB;AACA;AACJ;;AACD,WAAOD,KAAP;AACH;;AAED,WAASG,kBAAT,CAA4BC,CAA5B,EAA+B;AAC5BP,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,CAAC,CAACC,MAAF,CAASC,KAAhC,EAD4B,CAE5B;AACH;;AAQA,sBACI;AAAA,eACKvB,cADL,eAGI;AAAA,8BAAaG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAGkB,CAAD,IAAOD,kBAAkB,EAA3C;AAAA,kBACSJ,iBAAiB;AAD1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJA,eASI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,QAAxC;AAAkD,MAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtDD;;GAAMpB,gB;UAGqBH,W;;;KAHrBG,gB;AAwDN,eAAeA,gBAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport {useHistory, Link, useLocation, useParams} from 'react-router-dom'\nimport Web3 from 'web3'\n\nconst Donatorinterface = () => {\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi\n    const currentAccount = useLocation().pathname.split('/donator/')[1];\n    const [balance, setBalance] = useState(0)\n    const [donateamount, setDonateamount] = useState(0)\n    var web3 = new Web3();\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n\n\n    web3.eth.getBalance(currentAccount).then(\n        function(wei){\n            setBalance(web3.utils.fromWei(wei, 'ether'));\n            // alert(balance + \" ETH\");\n            console.log(balance);\n        }\n    )\n    // console.log(wei)\n    function createSelectItems() {\n        let items = [];         \n        for (let i = 0; i <= 10; i++) {             \n             items.push(<option key={i} value={i}>{i}</option>);   \n             //here I will be creating my options dynamically based on\n             //what props are currently passed to the parent component\n        }\n        return items;\n    }  \n   \n    function onDropdownSelected(e) {\n       console.log(\"THE VAL\", e.target.value);\n       //here you will see the current selected value of the select input\n   }\n    \n\n\n\n    \n\n\n    return (\n        <div>\n            {currentAccount}\n            \n            <p>balance: {balance}</p>\n        <div className=\"option\">\n            <select onChange={(e) => onDropdownSelected()}>\n                    {createSelectItems()}\n            </select>\n        </div>\n            <input type=\"text\" className=\"label\" id=\"amount\"  placeholder=\"0\" />\n            <button className=\"smallbutton\">donate</button>\n            \n        </div>\n    )\n}\n\nexport default Donatorinterface\n"]},"metadata":{},"sourceType":"module"}