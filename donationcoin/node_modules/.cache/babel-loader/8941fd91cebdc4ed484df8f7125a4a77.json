{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport Web3 from 'web3';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const [owner, setOwner] = useState('');\n  var web3 = new Web3();\n\n  const init = () => {\n    if (typeof web3 !== 'undefined') {\n      console.log('Web3 found');\n      window.web3 = new Web3(web3.currentProvider);\n      web3.eth.defaultAccount = web3.eth.accounts[0];\n    } else {\n      console.error('web3 was undefined');\n    }\n  }; // get abi\n\n\n  const abi = [{\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"changeOwner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"oldOwner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"OwnerSet\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"getOwner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]; // contractAddress\n\n  const getOwner = async () => {\n    // init();\n    web3 = new Web3('http://localhost:8545'); // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n\n    const contractAddress = '0x457796b00214E6514fE3AfC6380b70412727D146';\n    const contract = new web3.eth.Contract(abi, contractAddress);\n    console.log(contract);\n    contract.methods.getOwner().call((err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(JSON.stringify(result));\n      }\n    });\n    await web3.eth.getAccounts().then(function (accounts) {\n      console.log(accounts[0]);\n    }).catch(function (tx) {\n      console.log(tx);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getOwner(),\n      children: \"??\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"lJ7sN8fEa1WyGhAOH7carsXoYkI=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Test.js"],"names":["Web3","React","useState","Test","owner","setOwner","web3","init","console","log","window","currentProvider","eth","defaultAccount","accounts","error","abi","getOwner","contractAddress","contract","Contract","methods","call","err","result","JSON","stringify","getAccounts","then","catch","tx"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\nimport React, {useState} from 'react'\n\n\nconst Test = () => {\n    const [owner, setOwner] = useState('')\n    var web3 = new Web3();\n    const init = () => {\n        if (typeof web3 !== 'undefined') {\n            console.log('Web3 found');\n            window.web3 = new Web3(web3.currentProvider);\n            web3.eth.defaultAccount = web3.eth.accounts[0];\n        } else {\n            console.error('web3 was undefined');\n        }\n    }\n    // get abi\n    const abi = [\n        \n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"newOwner\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"name\": \"changeOwner\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"constructor\"\n            },\n            {\n                \"anonymous\": false,\n                \"inputs\": [\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"oldOwner\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"newOwner\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"name\": \"OwnerSet\",\n                \"type\": \"event\"\n            },\n            {\n                \"inputs\": [],\n                \"name\": \"getOwner\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            }\n        \n    ]\n\n    // contractAddress\n    const getOwner = async () => {\n        // init();\n        web3 = new Web3('http://localhost:8545')\n        // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n        const contractAddress = '0x457796b00214E6514fE3AfC6380b70412727D146'\n        const contract = new web3.eth.Contract(abi, contractAddress)\n        console.log(contract)\n        contract.methods.getOwner().call((err, result) => {\n            if (err){\n                console.log(err)\n            } else {\n                console.log(JSON.stringify(result))\n            }\n        })\n        await web3.eth.getAccounts().then(function(accounts){\n            console.log(accounts[0])\n        }).catch(function(tx){\n            console.log(tx);\n        })\n\n    }\n    return (\n        <div>\n            <button onClick={() => getOwner()}>??</button>\n        </div>\n    )\n}\n\nexport default Test\n\n"]},"metadata":{},"sourceType":"module"}