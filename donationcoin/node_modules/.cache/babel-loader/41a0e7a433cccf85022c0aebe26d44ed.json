{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory, Link, useLocation, useParams } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Donatorinterface = () => {\n  _s();\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n  const currentAccount = useLocation().pathname.split('/donator/')[1];\n  var web3 = new Web3();\n  web3 = new Web3('HTTP://127.0.0.1:8545');\n  web3.eth.getBalance(currentAccount, function (error, wei) {\n    if (!error) {\n      var balance = web3.utils.fromWei(wei, 'ether');\n      console.log(balance + \" ETH\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentAccount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Donatorinterface, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Donatorinterface;\nexport default Donatorinterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Donatorinterface\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Donatorinterface.js"],"names":["useState","useHistory","Link","useLocation","useParams","Web3","Donatorinterface","admins","require","abi","currentAccount","pathname","split","web3","eth","getBalance","error","wei","balance","utils","fromWei","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,MAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,QAAMC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAtB;AACA,QAAMC,cAAc,GAAGP,WAAW,GAAGQ,QAAd,CAAuBC,KAAvB,CAA6B,WAA7B,EAA0C,CAA1C,CAAvB;AACA,MAAIC,IAAI,GAAG,IAAIR,IAAJ,EAAX;AACAQ,EAAAA,IAAI,GAAG,IAAIR,IAAJ,CAAS,uBAAT,CAAP;AACAQ,EAAAA,IAAI,CAACC,GAAL,CAASC,UAAT,CAAoBL,cAApB,EAAoC,UAAUM,KAAV,EAAiBC,GAAjB,EAAsB;AACtD,QAAI,CAACD,KAAL,EAAY;AACR,UAAIE,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,EAAwB,OAAxB,CAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,GAAG,MAAtB;AACH;AACJ,GALD;AAWA,sBACI;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;GAAMJ,gB;UAGqBH,W;;;KAHrBG,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["import {useState} from 'react'\nimport {useHistory, Link, useLocation, useParams} from 'react-router-dom'\nimport Web3 from 'web3'\n\n\nconst Donatorinterface = () => {\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi\n    const currentAccount = useLocation().pathname.split('/donator/')[1];\n    var web3 = new Web3();\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n    web3.eth.getBalance(currentAccount, function (error, wei) {\n        if (!error) {\n            var balance = web3.utils.fromWei(wei, 'ether');\n            console.log(balance + \" ETH\");\n        }\n    });\n\n\n    \n\n\n    return (\n        <div>\n            {currentAccount}\n        </div>\n    )\n}\n\nexport default Donatorinterface\n"]},"metadata":{},"sourceType":"module"}