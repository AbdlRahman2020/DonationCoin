{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/CharitySignup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharitySignup = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  var web3 = new Web3();\n  web3 = new Web3('HTTP://127.0.0.1:8545');\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n\n  const submitInput = async e => {\n    var currentAccount;\n    var contract = new web3.eth.Contract(abi, currentAccount);\n    e.preventDefault();\n\n    if (username && password) {\n      console.log(username);\n      console.log(password); // create a new account\n\n      web3.eth.personal.newAccount(username + password, function (err, res) {\n        console.log(\"error: \" + err);\n        console.log(\"res: \" + res);\n      });\n      await web3.eth.getAccounts().then(function (accounts) {\n        // need a function in contract to map [password, value] pair to new created charity address\n        // they used the pair to login\n        // currentAccount is new created one\n        // aim to bind [username, password] to account\n        currentAccount = accounts[-1];\n        contract.methods.xxx([username, password]).send({\n          from: currentAccount\n        }).then();\n      }); // to self charitypage\n\n      history.push({\n        pathname: '/charity/' + currentAccount,\n        state: {\n          address: currentAccount\n        }\n      });\n    } else {\n      alert(\"please use valid username and password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/charity\",\n      style: {\n        position: 'absolute',\n        marginLeft: \"80vw\",\n        marginTop: \"5vh\",\n        color: \"red\"\n      },\n      children: \"Click here to go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"labelinput\",\n      onSubmit: submitInput,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#92eb49\",\n          textAlign: \"center\",\n          minHeight: \"20vh\",\n          marginTop: \"10vh\"\n        },\n        children: \"Charity reigistration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"label\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"label\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enter\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharitySignup, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n\n_c = CharitySignup;\nexport default CharitySignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharitySignup\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/CharitySignup.js"],"names":["useState","useHistory","Link","Web3","CharitySignup","username","setUsername","password","setPassword","history","web3","admins","require","abi","submitInput","e","currentAccount","contract","eth","Contract","preventDefault","console","log","personal","newAccount","err","res","getAccounts","then","accounts","methods","xxx","send","from","push","pathname","state","address","alert","position","marginLeft","marginTop","color","textAlign","minHeight","event","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAIS,IAAI,GAAG,IAAIP,IAAJ,EAAX;AACAO,EAAAA,IAAI,GAAG,IAAIP,IAAJ,CAAS,uBAAT,CAAP;;AACA,MAAIQ,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,QAAMC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAtB;;AAEA,QAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7B,QAAIC,cAAJ;AACA,QAAIC,QAAQ,GAAG,IAAIP,IAAI,CAACQ,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BG,cAA3B,CAAf;AAEAD,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAIf,QAAQ,IAAIE,QAAhB,EAA0B;AACtBc,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ,EAFsB,CAGtB;;AACAG,MAAAA,IAAI,CAACQ,GAAL,CAASK,QAAT,CAAkBC,UAAlB,CAA6BnB,QAAQ,GAAGE,QAAxC,EAAkD,UAASkB,GAAT,EAAcC,GAAd,EAAkB;AAEhEL,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAUG,GAAtB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAQI,GAApB;AAEH,OALD;AAOA,YAAMhB,IAAI,CAACQ,GAAL,CAASS,WAAT,GAAuBC,IAAvB,CAA4B,UAASC,QAAT,EAAkB;AAChD;AACA;AACA;AACA;AACAb,QAAAA,cAAc,GAAGa,QAAQ,CAAC,CAAC,CAAF,CAAzB;AACAZ,QAAAA,QAAQ,CAACa,OAAT,CAAiBC,GAAjB,CAAqB,CAAC1B,QAAD,EAAWE,QAAX,CAArB,EAA2CyB,IAA3C,CAAgD;AAACC,UAAAA,IAAI,EAAEjB;AAAP,SAAhD,EAAwEY,IAAxE;AAUC,OAhBC,CAAN,CAXsB,CA6BtB;;AACAnB,MAAAA,OAAO,CAACyB,IAAR,CAAa;AAACC,QAAAA,QAAQ,EAAE,cAAcnB,cAAzB;AAAyCoB,QAAAA,KAAK,EAAE;AACzDC,UAAAA,OAAO,EAAErB;AADgD;AAAhD,OAAb;AAEH,KAhCD,MAiCI;AACAsB,MAAAA,KAAK,CAAC,wCAAD,CAAL;AAGH;AACJ,GA3CD;;AA6CA,sBACI;AAAA,4BACY,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,UAAU,EAAC,MAAjC;AAAyCC,QAAAA,SAAS,EAAC,KAAnD;AAA0DC,QAAAA,KAAK,EAAC;AAAhE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,eAKY;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAuC,MAAA,QAAQ,EAAE5B,WAAjD;AAAA,8BACA;AAAI,QAAA,KAAK,EAAE;AAAC4B,UAAAA,KAAK,EAAC,SAAP;AAAkBC,UAAAA,SAAS,EAAC,QAA5B;AAAsCC,UAAAA,SAAS,EAAC,MAAhD;AAAwDH,UAAAA,SAAS,EAAC;AAAlE,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAEpC,QAA5C;AAAuD,QAAA,WAAW,EAAC,UAAnE;AAA8E,QAAA,QAAQ,EAAGwC,KAAD,IAAWvC,WAAW,CAACuC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA9G;AAAA;AAAA;AAAA;AAAA,cAHA,eAUA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAExC,QAA5C;AAAsD,QAAA,WAAW,EAAC,UAAlE;AAA6E,QAAA,QAAQ,EAAGsC,KAAD,IAAWrC,WAAW,CAACqC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA7G;AAAA;AAAA;AAAA;AAAA,cAVA,eAcA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/ED;;GAAM3C,a;UAGcH,U;;;KAHdG,a;AAiFN,eAAeA,aAAf","sourcesContent":["import {useState} from 'react'\nimport {useHistory, Link} from 'react-router-dom'\nimport Web3 from 'web3'\n\nconst CharitySignup = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const history = useHistory();\n    var web3 = new Web3();\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi;\n\n    const submitInput = async (e) => {\n        var currentAccount;\n        var contract = new web3.eth.Contract(abi, currentAccount)\n\n        e.preventDefault()\n        if (username && password) {\n            console.log(username)\n            console.log(password)\n            // create a new account\n            web3.eth.personal.newAccount(username + password, function(err, res){\n\n                console.log(\"error: \"+err);\n                console.log(\"res: \"+res);\n    \n            });\n            \n            await web3.eth.getAccounts().then(function(accounts){\n                // need a function in contract to map [password, value] pair to new created charity address\n                // they used the pair to login\n                // currentAccount is new created one\n                // aim to bind [username, password] to account\n                currentAccount = accounts[-1]\n                contract.methods.xxx([username, password]).send({from: currentAccount}).then(\n                    // function or not\n                        \n                    \n                    )\n                \n                   \n                   \n    \n                    \n                })\n            \n            // to self charitypage\n            history.push({pathname: '/charity/' + currentAccount, state: {\n                address: currentAccount }})\n        } \n        else{\n            alert(\"please use valid username and password\")\n\n\n        }\n    }\n\n    return (\n        <div >\n                    <Link to=\"/charity\" style={{position:'absolute', marginLeft:\"80vw\", marginTop:\"5vh\", color:\"red\"}}>Click here to go back</Link>\n                    {/* <label htmlFor=\"\" className=\"label\">\n                        Username:\n                    </label> */}\n                    <form action=\"\" className=\"labelinput\" onSubmit={submitInput}>\n                    <h1 style={{color:\"#92eb49\", textAlign:\"center\", minHeight:\"20vh\", marginTop:\"10vh\"}}>Charity reigistration</h1>\n\n                    <input type=\"text\" className=\"label\" value={username}  placeholder=\"Username\" onChange={(event) => setUsername(event.target.value)}/>\n\n\n\n                    {/* <label htmlFor=\"\" className=\"label\">Password:</label> */}\n\n\n                    <input type=\"text\" className=\"label\" value={password} placeholder=\"Password\" onChange={(event) => setPassword(event.target.value)}/>\n\n\n\n                    <input type=\"submit\"  value=\"Enter\" className=\"submit\" />\n\n                    </form>\n        </div>\n    )\n}\n\nexport default CharitySignup\n"]},"metadata":{},"sourceType":"module"}