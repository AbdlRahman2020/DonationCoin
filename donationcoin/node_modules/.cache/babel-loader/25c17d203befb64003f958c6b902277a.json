{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport Web3 from 'web3';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar web3 = new Web3();\n\nconst init = () => {\n  if (typeof web3 !== 'undefined') {\n    console.log('Web3 found');\n    window.web3 = new Web3(web3.currentProvider);\n    web3.eth.defaultAccount = web3.eth.accounts[0];\n  } else {\n    console.error('web3 was undefined');\n  }\n}; // get abi\n\n\nconst abi = [[{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"changeOwner\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"oldOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnerSet\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getOwner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}]];\n\nconst Test = () => {\n  _s();\n\n  const [owner, setOwner] = useState(''); // contractAddress\n\n  const getOwner = () => {\n    init(); // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n\n    const contractAddress = '0x5A8391EAc93D5a9e4975fE3baAD5306e6DABd2E4';\n    const contract = new web3.eth.Contract(abi, contractAddress);\n    console.log(contract);\n    const res = contract.methods.getOwner().call((err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(result);\n      }\n    });\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getOwner(),\n      children: \"??\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"lJ7sN8fEa1WyGhAOH7carsXoYkI=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Test.js"],"names":["Web3","React","useState","web3","init","console","log","window","currentProvider","eth","defaultAccount","accounts","error","abi","Test","owner","setOwner","getOwner","contractAddress","contract","Contract","res","methods","call","err","result"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAIC,IAAI,GAAG,IAAIH,IAAJ,EAAX;;AACA,MAAMI,IAAI,GAAG,MAAM;AACjB,MAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;AAC/BE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,IAAAA,MAAM,CAACJ,IAAP,GAAc,IAAIH,IAAJ,CAASG,IAAI,CAACK,eAAd,CAAd;AACAL,IAAAA,IAAI,CAACM,GAAL,CAASC,cAAT,GAA0BP,IAAI,CAACM,GAAL,CAASE,QAAT,CAAkB,CAAlB,CAA1B;AACD,GAJD,MAIO;AACJN,IAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd;AACF;AACF,CARD,C,CASA;;;AACA,MAAMC,GAAG,GAAG,CACR,CACI;AACI,YAAU,CACN;AACI,oBAAgB,SADpB;AAEI,YAAQ,UAFZ;AAGI,YAAQ;AAHZ,GADM,CADd;AAQI,UAAQ,aARZ;AASI,aAAW,EATf;AAUI,qBAAmB,YAVvB;AAWI,UAAQ;AAXZ,CADJ,EAcI;AACI,YAAU,EADd;AAEI,qBAAmB,YAFvB;AAGI,UAAQ;AAHZ,CAdJ,EAmBI;AACI,eAAa,KADjB;AAEI,YAAU,CACN;AACI,eAAW,IADf;AAEI,oBAAgB,SAFpB;AAGI,YAAQ,UAHZ;AAII,YAAQ;AAJZ,GADM,EAON;AACI,eAAW,IADf;AAEI,oBAAgB,SAFpB;AAGI,YAAQ,UAHZ;AAII,YAAQ;AAJZ,GAPM,CAFd;AAgBI,UAAQ,UAhBZ;AAiBI,UAAQ;AAjBZ,CAnBJ,EAsCI;AACI,YAAU,EADd;AAEI,UAAQ,UAFZ;AAGI,aAAW,CACP;AACI,oBAAgB,SADpB;AAEI,YAAQ,EAFZ;AAGI,YAAQ;AAHZ,GADO,CAHf;AAUI,qBAAmB,MAVvB;AAWI,UAAQ;AAXZ,CAtCJ,CADQ,CAAZ;;AAuDA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CADe,CAGf;;AACA,QAAMe,QAAQ,GAAG,MAAM;AACnBb,IAAAA,IAAI,GADe,CAEnB;;AACA,UAAMc,eAAe,GAAG,4CAAxB;AACA,UAAMC,QAAQ,GAAG,IAAIhB,IAAI,CAACM,GAAL,CAASW,QAAb,CAAsBP,GAAtB,EAA2BK,eAA3B,CAAjB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACA,UAAME,GAAG,GAAGF,QAAQ,CAACG,OAAT,CAAiBL,QAAjB,GAA4BM,IAA5B,CAAiC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC1D,UAAID,GAAJ,EAAQ;AACJnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,OAFD,MAEO;AACHnB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAZ;AACH;AACJ,KANW,CAAZ;AAOApB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACH,GAdD;;AAeA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMH,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import Web3 from 'web3'\nimport React, {useState} from 'react'\n\nvar web3 = new Web3();\nconst init = () => {\n  if (typeof web3 !== 'undefined') {\n    console.log('Web3 found');\n    window.web3 = new Web3(web3.currentProvider);\n    web3.eth.defaultAccount = web3.eth.accounts[0];\n  } else {\n     console.error('web3 was undefined');\n  }\n}\n// get abi\nconst abi = [\n    [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"changeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"OwnerSet\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n]\n\nconst Test = () => {\n    const [owner, setOwner] = useState('')\n    \n    // contractAddress\n    const getOwner = () => {\n        init();\n        // return web3.eth.getBlock('latest', (err, result) => {console.log(1)})\n        const contractAddress = '0x5A8391EAc93D5a9e4975fE3baAD5306e6DABd2E4'\n        const contract = new web3.eth.Contract(abi, contractAddress)\n        console.log(contract)\n        const res = contract.methods.getOwner().call((err, result) => {\n            if (err){\n                console.log(err)\n            } else {\n                console.log(result)\n            }\n        })\n        console.log(res)\n    }\n    return (\n        <div>\n            <button onClick={() => getOwner()}>??</button>\n        </div>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}