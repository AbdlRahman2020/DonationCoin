{"ast":null,"code":"var _jsxFileName = \"/Users/iphone13.5/donationcoin/src/components/Charityinterface.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport { useHistory, Link, useLocation, useParams } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charityinterface = () => {\n  _s();\n\n  let admins = require('./ABI.json');\n\n  const abi = admins[0].abi;\n  const currentAccount = useLocation().pathname.split('/charity/')[1];\n  const [transactions, setTrans] = useState([]);\n  var web3 = new Web3();\n  var contract;\n  web3 = new Web3('HTTP://127.0.0.1:8545'); // use this function to get transaction related to current charity\n\n  web3.eth.getPastLogs({\n    fromBlock: '0x0',\n    address: '0x9e3319636e2126e3c0bc9e3134AEC5e1508A46c7'\n  }).then(res => {\n    res.forEach(rec => {\n      console.log(rec.blockNumber, rec.transactionHash, rec.topics);\n      setTrans([...transactions, [rec.blockNumber, rec.transactionHash, rec.topics]]);\n    });\n  }).catch(err => console.log(\"getPastLogs failed\", err));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/charity\",\n      style: {\n        position: 'absolute',\n        marginLeft: \"80vw\",\n        marginTop: \"5vh\",\n        color: \"red\"\n      },\n      children: \"Click here to go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"currentAccount:\", currentAccount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"balance: \", transactions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Charityinterface, \"emg47NYQwOC3L+ePDEeNRQ90CG4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Charityinterface;\nexport default Charityinterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charityinterface\");","map":{"version":3,"sources":["/Users/iphone13.5/donationcoin/src/components/Charityinterface.js"],"names":["useState","useEffect","unstable_concurrentAct","useHistory","Link","useLocation","useParams","Web3","Charityinterface","admins","require","abi","currentAccount","pathname","split","transactions","setTrans","web3","contract","eth","getPastLogs","fromBlock","address","then","res","forEach","rec","console","log","blockNumber","transactionHash","topics","catch","err","position","marginLeft","marginTop","color"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,sBAAT,QAAuC,mDAAvC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,MAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,QAAMC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAtB;AACA,QAAMC,cAAc,GAAGP,WAAW,GAAGQ,QAAd,CAAuBC,KAAvB,CAA6B,WAA7B,EAA0C,CAA1C,CAAvB;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;AAEA,MAAIiB,IAAI,GAAG,IAAIV,IAAJ,EAAX;AACA,MAAIW,QAAJ;AACAD,EAAAA,IAAI,GAAG,IAAIV,IAAJ,CAAS,uBAAT,CAAP,CAR2B,CAU3B;;AACAU,EAAAA,IAAI,CAACE,GAAL,CAASC,WAAT,CAAqB;AAACC,IAAAA,SAAS,EAAC,KAAX;AAAiBC,IAAAA,OAAO,EAAC;AAAzB,GAArB,EAA6FC,IAA7F,CAAkGC,GAAG,IAAI;AACrGA,IAAAA,GAAG,CAACC,OAAJ,CAAYC,GAAG,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,WAAhB,EAA6BH,GAAG,CAACI,eAAjC,EAAkDJ,GAAG,CAACK,MAAtD;AACAf,MAAAA,QAAQ,CAAC,CAAC,GAAGD,YAAJ,EAAkB,CAACW,GAAG,CAACG,WAAL,EAAkBH,GAAG,CAACI,eAAtB,EAAuCJ,GAAG,CAACK,MAA3C,CAAlB,CAAD,CAAR;AACH,KAHD;AAIC,GALL,EAKOC,KALP,CAKaC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,GAAlC,CALpB;AASA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,UAAU,EAAC,MAAjC;AAAyCC,QAAAA,SAAS,EAAC,KAAnD;AAA0DC,QAAAA,KAAK,EAAC;AAAhE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,oCAAsBzB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,8BAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA9BD;;GAAMP,gB;UAGqBH,W;;;KAHrBG,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport {useHistory, Link, useLocation, useParams} from 'react-router-dom'\nimport Web3 from 'web3'\n\nconst Charityinterface = () => {\n    let admins = require('./ABI.json');\n    const abi = admins[0].abi;\n    const currentAccount = useLocation().pathname.split('/charity/')[1];\n    const [transactions, setTrans] = useState([]);\n    \n    var web3 = new Web3();\n    var contract;\n    web3 = new Web3('HTTP://127.0.0.1:8545');\n    \n    // use this function to get transaction related to current charity\n    web3.eth.getPastLogs({fromBlock:'0x0',address:'0x9e3319636e2126e3c0bc9e3134AEC5e1508A46c7'}).then(res => {\n        res.forEach(rec => {\n            console.log(rec.blockNumber, rec.transactionHash, rec.topics);\n            setTrans([...transactions, [rec.blockNumber, rec.transactionHash, rec.topics]])\n        });\n        }).catch(err => console.log(\"getPastLogs failed\", err));\n\n\n\n    return (\n        <div>\n            <Link to=\"/charity\" style={{position:'absolute', marginLeft:\"80vw\", marginTop:\"5vh\", color:\"red\"}}>Click here to go back</Link>\n            <span>currentAccount:{currentAccount}</span>\n            \n            <p>balance: {transactions}</p>\n            \n            \n        </div>\n    )\n}\n\nexport default Charityinterface\n"]},"metadata":{},"sourceType":"module"}